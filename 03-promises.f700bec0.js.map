{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAOC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbEQ,SAASC,cAAc,SAC9BC,iBAAiB,UAgBzB,SAAsBC,GACpBA,EAAMC,iBAER,MACGC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAGT,IAAIC,EAAcC,OAAOL,EAAMM,OAC/B,MAAMC,EAAaF,OAAOJ,EAAKK,OACzBE,EAAeH,OAAOH,EAAOI,OAGnC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAcC,GAAK,EACtCzB,EAAcyB,EAAGL,GACdM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEhE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,IAEhEkB,GAAeG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\t\t\n\tconst formRef= document.querySelector('.form');\n\tformRef.addEventListener('submit', handleSubmit);\n\t\n\t\n\tfunction createPromise(position, delay) {\n\t  const shouldResolve = Math.random() > 0.3;\n\t  return new Promise((resolve, reject) => {\n\t    setTimeout(() => {\n\t      if (shouldResolve) {\n\t        resolve({ position, delay });\n\t      } else {\n\t        reject({ position, delay });\n\t      }\n\t    }, delay);\n\t  });\n\t}\n\t \n\tfunction handleSubmit(event) {\n\t  event.preventDefault();\n\t\n\tconst {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n\t\n\t  let numberDelay = Number(delay.value);\n\t  const numberStep = Number(step.value);\n\t  const numberAmount = Number(amount.value);\n\t\n\t\n\t  for (let i = 1; i <= numberAmount; i += 1) {\n\t    createPromise(i, numberDelay)\n\t      .then(({ position, delay }) => {\n\t        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n\t      })\n\t      .catch(({ position, delay }) => {\n\t        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n\t      });\n\t    numberDelay += numberStep;\n\t  }\n\t}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","numberDelay","Number","value","numberStep","numberAmount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.f700bec0.js.map"}